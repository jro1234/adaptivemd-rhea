# Command to queue/submit LRMS job
command:  "bsub"

# The options this command takes
options:
    -e:      "{job_home}/admd.err"
    -o:      "{job_home}/admd.out"
    -J:      "{job_name}"
    -P:      "{allocation}"
    -W:      "{minutes}"
    -nnodes: "{n_nodes}"

# Extra arguments for submit command 
arguments:
    - "-alloc_flags \"gpumps smt4\""

# Body of the submitted job script
script:
    - "# 1- Load the AdaptiveMD environment"
    - "source {admd_profile}"
    - "echo \"CUDA compiler: $(which nvcc)\""

    - "# 2- Update job state to running"
    - "cd {job_home}"
    - "echo \"RUNNING\" > {job_state}"

    - "# 3- Shell Job 1, Launch MongoDB"
    - task:
        name: "database"

    - "# 4- Wait for MongoDB"
    - "while [ ! -f \"{dbhome}/db.host\" ]; do echo \"Waiting for host file\"; sleep 1; done; echo \"Found host file\""
    - "export ADMD_DBURL=\"mongodb://$(cat {dbhome}/db.host):{dbport}/\""
    - "echo \"new ADMD_DBURL: $ADMD_DBURL\""

    - "# 5- Shell Job 2, Start AdaptiveMD to coordinate AdaptiveMD Event"
    - "adaptivemdruntime {project_name} --n_traj 0 --rescue_only 1> admd.adaptivemd.out 2> admd.adaptivemd.err & EVENT_PID=$!"

    - "# 6- Shell Job 3, Launch AdaptiveMDWorkers"
    - task:
        name: "worker"

    - "# 7- Shut down Shell Jobs after AdaptiveMD Event (shell job 2) terminates"
    - "wait \"$EVENT_PID\""
    - "echo \"STOPPING\" > {job_state}"
    - "kill %1"
    - "kill %3"
    - "sleep 3"
    - "echo \"COMPLETE\" > {job_state}"

    - "# 8- Help the LRMS with explicit job kill"
    - "echo \"bkill $LSB_JOBID\""
    - "bkill $LSB_JOBID"
